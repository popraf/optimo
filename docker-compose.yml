version: "3.8"

services:
  # Database service
  database:
    container_name: optimo-mysql-database
    image: mysql:9.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Async tasks broker service
  redis:
    container_name: optimo-redis
    image: redis:7.4.0
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network

  # Async tasks worker
  celery:
    container_name: optimo-celery
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    command: celery -A django_backend worker --loglevel=info
    environment:
      DJANGO_SETTINGS_MODULE: django_backend.settings
      CELERY_BROKER_URL: ${BROKER_URL}
      CELERY_RESULT_BACKEND: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/django_backend:/app
    depends_on:
      - django
      - redis
    networks:
      - app-network

  # Flask API
  flask:
    container_name: optimo-flask-backend
    build:
      context: ./backend/flask
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    environment:
      BROKER_URL: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/flask:/app
    depends_on:
      - database
      - redis
    restart: on-failure
    networks:
      - app-network

  # Django backend application
  django:
    container_name: optimo-django-backend
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      BROKER_URL: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/django_backend:/app
    depends_on:
      - database
      - redis
      - flask
    restart: on-failure
    networks:
      - app-network

  networks:
    app-network:
      driver: bridge

  volumes:
    db_data:
