version: "3.8"

services:
  # Database service
  optimo-mysql:
    container_name: optimo-mysql-container
    image: mysql:9.0
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Async tasks broker service
  optimo-redis:
    container_name: optimo-redis-container
    image: redis:7.4.0
    env_file:
      - .env
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network

  optimo-django-migrate:
    container_name: optimo-django-migrate-container
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    env_file:
      - .env
    command: sh -c "python manage.py makemigrations && python manage.py migrate"
    environment:
      DJANGO_SETTINGS_MODULE: django_backend.settings
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/django_backend:/app_django
    depends_on:
      - optimo-mysql
    networks:
      - app-network

  # Async tasks worker
  celery:
    container_name: optimo-celery-container
    env_file:
      - .env
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    command: celery -A django_backend worker --loglevel=info
    environment:
      DJANGO_SETTINGS_MODULE: django_backend.settings
      CELERY_BROKER_URL: ${BROKER_URL}
      CELERY_RESULT_BACKEND: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/django_backend:/app_django
    depends_on:
      - optimo-django
      - optimo-redis
    networks:
      - app-network

  # Flask API
  optimo-flask:
    container_name: optimo-flask-container
    env_file:
      - .env
    build:
      context: ./backend/flask
      dockerfile: Dockerfile
    ports:
      - '8005:8005'
    environment:
      BROKER_URL: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/flask:/app_flask
    depends_on:
      - optimo-mysql
      - optimo-redis
    restart: on-failure
    networks:
      - app-network

  # Django backend application
  optimo-django:
    container_name: optimo-django-container
    env_file:
      - .env
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      BROKER_URL: ${BROKER_URL}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - ./backend/django_backend:/app_django
    depends_on:
      - optimo-mysql
      - optimo-redis
      - optimo-flask
      - optimo-django-migrate
    restart: on-failure
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
